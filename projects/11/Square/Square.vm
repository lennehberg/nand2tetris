function Square.new 0
push constant 0
call Memory.alloc 1
pop pointer 0
// let x = Ax 
push argument 0
pop this 0
// let y = Ay 
push argument 1
pop this 1
// let size = Asize 
push argument 2
pop this 2
// do draw ( ) 
call draw 0
pop temp 0
// return this 
push this 0
return
function Square.dispose 0
push argument 0
pop pointer 0
// do Memory . deAlloc ( this ) 
push this 0
call Memory.deAlloc 1
pop temp 0
// return 
push constant 0
return
function Square.draw 0
push argument 0
pop pointer 0
// do Screen . setColor ( true ) 
push constant 1
neg
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , y , x + size , y + size ) 
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
// return 
push constant 0
return
function Square.erase 0
push argument 0
pop pointer 0
// do Screen . setColor ( false ) 
push constant 0
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , y , x + size , y + size ) 
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
// return 
push constant 0
return
function Square.incSize 0
push argument 0
pop pointer 0
// if ( ( ( y + size ) < 254 ) & ( ( x + size ) < 510 ) ) 
push this 1
push this 2
add
push constant 254
lt
push this 0
push this 2
add
push constant 510
lt
and
not
if-goto ELSE_IF.4
// do erase ( ) 
call erase 0
pop temp 0
// let size = size + 2 
push this 2
push constant 2
add
pop this 2
// do draw ( ) 
call draw 0
pop temp 0
goto END_IF.4
label ELSE_IF.4
label END_IF.4
// return 
push constant 0
return
function Square.decSize 0
push argument 0
pop pointer 0
// if ( size > 2 ) 
push this 2
push constant 2
gt
not
if-goto ELSE_IF.5
// do erase ( ) 
call erase 0
pop temp 0
// let size = size - 2 
push this 2
push constant 2
sub
pop this 2
// do draw ( ) 
call draw 0
pop temp 0
goto END_IF.5
label ELSE_IF.5
label END_IF.5
// return 
push constant 0
return
function Square.moveUp 0
push argument 0
pop pointer 0
// if ( y > 1 ) 
push this 1
push constant 1
gt
not
if-goto ELSE_IF.6
// do Screen . setColor ( false ) 
push constant 0
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , ( y + size ) - 1 , x + size , y + size ) 
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
// let y = y - 2 
push this 1
push constant 2
sub
pop this 1
// do Screen . setColor ( true ) 
push constant 1
neg
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , y , x + size , y + 1 ) 
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
goto END_IF.6
label ELSE_IF.6
label END_IF.6
// return 
push constant 0
return
function Square.moveDown 0
push argument 0
pop pointer 0
// if ( ( y + size ) < 254 ) 
push this 1
push this 2
add
push constant 254
lt
not
if-goto ELSE_IF.7
// do Screen . setColor ( false ) 
push constant 0
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , y , x + size , y + 1 ) 
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
// let y = y + 2 
push this 1
push constant 2
add
pop this 1
// do Screen . setColor ( true ) 
push constant 1
neg
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , ( y + size ) - 1 , x + size , y + size ) 
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
goto END_IF.7
label ELSE_IF.7
label END_IF.7
// return 
push constant 0
return
function Square.moveLeft 0
push argument 0
pop pointer 0
// if ( x > 1 ) 
push this 0
push constant 1
gt
not
if-goto ELSE_IF.8
// do Screen . setColor ( false ) 
push constant 0
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( ( x + size ) - 1 , y , x + size , y + size ) 
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
// let x = x - 2 
push this 0
push constant 2
sub
pop this 0
// do Screen . setColor ( true ) 
push constant 1
neg
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , y , x + 1 , y + size ) 
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
goto END_IF.8
label ELSE_IF.8
label END_IF.8
// return 
push constant 0
return
function Square.moveRight 0
push argument 0
pop pointer 0
// if ( ( x + size ) < 510 ) 
push this 0
push this 2
add
push constant 510
lt
not
if-goto ELSE_IF.9
// do Screen . setColor ( false ) 
push constant 0
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( x , y , x + 1 , y + size ) 
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
// let x = x + 2 
push this 0
push constant 2
add
pop this 0
// do Screen . setColor ( true ) 
push constant 1
neg
call Screen.setColor 1
pop temp 0
// do Screen . drawRectangle ( ( x + size ) - 1 , y , x + size , y + size ) 
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
goto END_IF.9
label ELSE_IF.9
label END_IF.9
// return 
push constant 0
return
