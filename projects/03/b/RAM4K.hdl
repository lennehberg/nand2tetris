// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=reg8a, b=reg8b, c=reg8c, d=reg8d,
                                         e=reg8e, f=reg8f, g=reg8g, h=reg8h);

    RAM512(in=in, load=reg8a, address=address[0..8], out=out8a);
    RAM512(in=in, load=reg8b, address=address[0..8], out=out8b);
    RAM512(in=in, load=reg8c, address=address[0..8], out=out8c);
    RAM512(in=in, load=reg8d, address=address[0..8], out=out8d);
    RAM512(in=in, load=reg8e, address=address[0..8], out=out8e);
    RAM512(in=in, load=reg8f, address=address[0..8], out=out8f);
    RAM512(in=in, load=reg8g, address=address[0..8], out=out8g);
    RAM512(in=in, load=reg8h, address=address[0..8], out=out8h);
    Mux8Way16(a=out8a, b=out8b, c=out8c, d=out8d,
              e=out8e, f=out8f, g=out8g, h=out8h,
              sel=address[9..11],
              out=out);

}
